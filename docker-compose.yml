version: '3.8'

services:
  campfire:
    build:
      context: .
      dockerfile: Dockerfile
    image: campfire-on-rust:latest
    container_name: campfire
    restart: unless-stopped
    
    # Port mapping
    ports:
      - "3000:3000"
    
    # Environment configuration
    env_file:
      - .env.production
    
    # Volume mounts for persistent data
    volumes:
      - campfire_data:/app/data
      - campfire_logs:/app/logs
      - campfire_backups:/app/backups
    
    # Health check
    healthcheck:
      test: ["CMD", "/app/healthcheck.sh"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 10s
    
    # Resource limits
    deploy:
      resources:
        limits:
          memory: 512M
          cpus: '1.0'
        reservations:
          memory: 256M
          cpus: '0.5'
    
    # Security settings
    security_opt:
      - no-new-privileges:true
    read_only: false
    tmpfs:
      - /tmp:noexec,nosuid,size=100m
    
    # Logging configuration
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"
    
    # Labels for monitoring and management
    labels:
      - "com.campfire.service=web"
      - "com.campfire.version=1.0"
      - "traefik.enable=true"
      - "traefik.http.routers.campfire.rule=Host(`campfire.localhost`)"
      - "traefik.http.services.campfire.loadbalancer.server.port=3000"

  # Optional: Reverse proxy with Traefik
  traefik:
    image: traefik:v2.10
    container_name: campfire-traefik
    restart: unless-stopped
    profiles:
      - proxy
    
    command:
      - "--api.dashboard=true"
      - "--api.insecure=true"
      - "--providers.docker=true"
      - "--providers.docker.exposedbydefault=false"
      - "--entrypoints.web.address=:80"
      - "--entrypoints.websecure.address=:443"
      - "--certificatesresolvers.letsencrypt.acme.tlschallenge=true"
      - "--certificatesresolvers.letsencrypt.acme.email=admin@campfire.local"
      - "--certificatesresolvers.letsencrypt.acme.storage=/letsencrypt/acme.json"
    
    ports:
      - "80:80"
      - "443:443"
      - "8080:8080"  # Traefik dashboard
    
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - traefik_letsencrypt:/letsencrypt
    
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.traefik.rule=Host(`traefik.localhost`)"
      - "traefik.http.services.traefik.loadbalancer.server.port=8080"

  # Optional: Monitoring with Prometheus
  prometheus:
    image: prom/prometheus:latest
    container_name: campfire-prometheus
    restart: unless-stopped
    profiles:
      - monitoring
    
    ports:
      - "9090:9090"
    
    volumes:
      - ./monitoring/prometheus.yml:/etc/prometheus/prometheus.yml:ro
      - prometheus_data:/prometheus
    
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--storage.tsdb.retention.time=200h'
      - '--web.enable-lifecycle'

  # Optional: Grafana for metrics visualization
  grafana:
    image: grafana/grafana:latest
    container_name: campfire-grafana
    restart: unless-stopped
    profiles:
      - monitoring
    
    ports:
      - "3001:3000"
    
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin
      - GF_USERS_ALLOW_SIGN_UP=false
    
    volumes:
      - grafana_data:/var/lib/grafana
      - ./monitoring/grafana/dashboards:/etc/grafana/provisioning/dashboards:ro
      - ./monitoring/grafana/datasources:/etc/grafana/provisioning/datasources:ro

# Named volumes for persistent data
volumes:
  campfire_data:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: ./data
  
  campfire_logs:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: ./logs
  
  campfire_backups:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: ./backups
  
  traefik_letsencrypt:
    driver: local
  
  prometheus_data:
    driver: local
  
  grafana_data:
    driver: local

# Network configuration
networks:
  default:
    name: campfire-network
    driver: bridge